{% extends ':utils:box.html.twig' %}

{% block box_content %}
    <div class="row">
        <div class="col-md-8">
            <div class="chart-responsive">
                <canvas id="{{ chart.id }}" height="200"></canvas>
            </div>
            <!-- ./chart-responsive -->
        </div>
        <!-- /.col -->
        <div class="col-md-4">
            <ul class="chart-legend clearfix">
                {% for data in chart.datas %}
                    <li><i class="{{ data.picto }} text-{{ data.class }}"></i> {{ data.label }} ({{ data.value }})</li>
                {% endfor %}
            </ul>
        </div>
        <!-- /.col -->
    </div>
{% endblock %}

{% block box_footer %}
{% endblock box_footer %}

{% block post_box %}
    <script type="text/javascript">
        $(document).ready(function(){
            //-------------
            //- PIE CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var {{ chart.id }}_pieChartCanvas = $("#{{ chart.id }}").get(0).getContext("2d");
            var {{ chart.id }}_pieChart = new Chart({{ chart.id }}_pieChartCanvas);
            var {{ chart.id }}_PieData = {{ chart.datas|json_encode(constant('JSON_UNESCAPED_UNICODE'))|raw }};
            var {{ chart.id }}_pieOptions = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke: true,
                //String - The colour of each segment stroke
                segmentStrokeColor: "#fff",
                //Number - The width of each segment stroke
                segmentStrokeWidth: 1,
                //Number - The percentage of the chart that we cut out of the middle
                percentageInnerCutout: 50, // This is 0 for Pie charts
                //Number - Amount of animation steps
                animationSteps: 100,
                //String - Animation easing effect
                animationEasing: "easeOutBounce",
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true,
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: false,
                //String - A legend template
                legendTemplate: {% verbatim %}"<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"{% endverbatim %},
                //String - A tooltip template
                tooltipTemplate: "<%=value%> {{ chart.data_name }} : <%=label%> "

            };
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            {{ chart.id }}_pieChart.Doughnut({{ chart.id }}_PieData, {{ chart.id }}_pieOptions);
            //-----------------
            //- END PIE CHART -
            //-----------------
        });
    </script>
{% endblock %}